#
#  @(#) $Id: Makefile.target 2653 2014-08-17 12:37:42Z ertl-hiro $
# 

#
#		Makefile のターゲット依存部（Linux用）
#

#
#  システム名，開発環境名の定義
#
SYS = linux
TOOL = gcc

#
#  makeoffsetは使用しない
#
OMIT_MAKEOFFSET = true

#
#  コンパイルオプション
#
INCLUDES := $(INCLUDES) -I$(TARGETDIR)
ifdef KERNEL_FUNCOBJS
  COPTS := $(COPTS) -m32
else
  COPTS := $(COPTS) -Werror -m32
#  COPTS := $(COPTS) -Werror -m64
endif

COPTS := $(COPTS) -U_FORTIFY_SOURCE

COPTS := $(COPTS) -DWORKAROUND_CVE_2015_8777_FIX
# The pointer guard feature should be disabled to
# rewrite the setjmp/longjmp stack for task-switching.
# The pointer guard feature was disabled, when
# the LD_POINTER_GUARD enviornment variable value was 0.
# But, after the vulnerability CVE-2015-8777 was fixed,
# the LD_POINTER_GUARD environment variable can 
# no longer be used to disable the pointer guard feature. 
# The pointer guard feature is always enabled.
# In such system, we have to simulate the behavior of 
# the pointer guard feature by copying the pointer 
# mangling/de-mangling code from the glibc source code.
# This may make the whole code (or at least the target 
# dependent part) GPL'ed?

#
#  カーネルに関する定義
#
KERNEL_DIR := $(KERNEL_DIR) $(TARGETDIR)
KERNEL_COBJS := $(KERNEL_COBJS) target_config.o target_timer.o

#
#  システムサービスに関する定義
#
SYSSVC_COBJS := $(SYSSVC_COBJS) target_serial.o

#
#  コンフィギュレータ関係の変数の定義
#
CFG_TABS := $(CFG_TABS) --cfg1-def-table $(TARGETDIR)/target_def.csv

#
#  トレースログ記録のサンプルコードに関する定義
#
ifeq ($(ENABLE_TRACE),true)
	COPTS := $(COPTS) -DTOPPERS_ENABLE_TRACE
	KERNEL_DIR := $(KERNEL_DIR) $(SRCDIR)/arch/logtrace
	KERNEL_COBJS := $(KERNEL_COBJS) trace_config.o trace_dump.o
endif

#
#  依存関係の定義
#
cfg1_out.c: $(TARGETDIR)/target_def.csv
kernel_cfg.timestamp: $(TARGETDIR)/target.tf
$(OBJFILE): $(TARGETDIR)/target_check.tf
